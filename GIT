GIT的常用命令
git clone -b 分支名称 //克隆指定的分支
git status //显示分支的状态
git diff 文件绝对路径 //查看文件变化与不同
git add 文件绝对路径 //添加文件
git commit -m '评论' // 提交合入请求与评论
git push origin 分支名称 //把本地的分支提交到远端分支上
git branch -a //查询所有远端分支
git branch //查询本地分支
git push origin --delete 远端分支名称 // 删除远端分支
git branch -D  本地分支名称 //  删除本地分支
git pull origin master //拉取master分支的代码
git tag -l --sort=-taggerdate #按打tag的时间降序排列
git tag -l --sort=taggerdate #按打tag的时间升序排列
git tag -l --sort=-taggerdate | awk 'NR==1{print}' #按打tag的时间降序排列 输出第一行的值
git show -s --format=%s v1.0.0^{commit} 显示标签v1.0.0指向的提交的主题
git show -s --pretty=format:"%ai,%an: %s" trtc_access_20200709
git show -s --pretty=format:"%ai,%an: %s" $(git tag -l --sort=-taggerdate | awk 'NR==1{print}')
git whatchanged -1 | grep "^:" | awk '{print $6}' #获取最近一次MR的改动文件的列表
git whatchanged --since="2020-07-13" | grep "^:" |awk '{print $6}' #获取2020-72-13之后（不含13）的MR改动的文件列表，这里的日期是改动日期不是合入日期
git rev-list --since='2020-01-01' --until='2020-07-16' master | tail -1 这个等同于watchchaged用的日期时间点
git log --before="2020-07-06" | grep -B 1 "^Merge: " | head -1 | awk '{print $2}' (含7月6号)
git log --since="2020-07-06" | grep -B 1 "^Merge: " | head -1 | awk '{print $2}'  （不含7月6号，含7月7号之后）
git commit --amend '本地追加评论'
git reset 'commit' # 本地回退commit的提交
git reset 'commit' --hard # 本地回退commit的提交，并删除改动文件
git revert # 用于回滚某次提交的内容，并生成新的提交，不会抹掉历史。适合已push到远端时的回滚
git reflog #恢复本地操作记录
git checkout -- 文件 #回退文件中的内容
git checkout <目标commit> -- <文件> 恢复目标commit中的特定文件
